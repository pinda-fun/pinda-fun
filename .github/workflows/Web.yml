name: Web - Node

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'api/**'
      - 'docs/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'api/**'
      - 'docs/**'

jobs:
  node:
    name: Web
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: ['14']

    defaults:
      run:
        working-directory: Web

    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-
      - name: Install dependencies
        run: yarn install
      - name: Typecheck
        run: yarn typecheck
      - name: Lint JS
        run: yarn lint
      - name: Lint CSS
        run: yarn lint:css
      - name: Run tests
        run: yarn test
      - name: Try building the bundle
        run: yarn build
      - name: Remove bundle hash
        run: for i in build/static/*/*; do mv "$i" "$(echo "$i" | sed -E 's/(.*)\.[a-f0-9]{8}(.*)/\1\2/')"; done
      - name: Run bundlewatch
        run: yarn run bundlewatch --max-size 100kb ./build/**/*.js
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
